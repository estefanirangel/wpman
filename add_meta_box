<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en" dir="ltr">

<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<!--
<meta property="fb:page_id" content="6427302910" />
-->
<meta name="google-site-verification" content="7VWES_-rcHBcmaQis9mSYamPfNwE03f4vyTj4pfuAw0" />
<meta http-equiv="Content-Style-Type" content="text/css" />
		<meta name="generator" content="MediaWiki 1.15.5" />
		<meta name="keywords" content="Function Reference/add meta box,Function Reference/add meta box,Creating Tables with Plugins,Function Reference,Function Reference/add post meta,Function Reference/remove meta box,Function Reference/update post meta,How to Pass Tag Parameters,Migrating Plugins and Themes,Multilingual Codex,Template Tags" />
		<link rel="shortcut icon" href="/favicon.ico" />
		<link rel="search" type="application/opensearchdescription+xml" href="/opensearch_desc.php" title="Codex (en)" />
		<link rel="alternate" type="application/rss+xml" title="Codex RSS feed" href="/index.php?title=Special:RecentChanges&amp;feed=rss" />
		<link rel="alternate" type="application/atom+xml" title="Codex Atom feed" href="/index.php?title=Special:RecentChanges&amp;feed=atom" />
<title>Function Reference/add meta box &laquo; WordPress Codex</title>

<link rel="stylesheet" href="//wordpress.org/style/codex-wp4.css?3" />
<link href='//fonts.googleapis.com/css?family=Open+Sans:300italic,400italic,600italic,400,300,600&subset=latin,cyrillic-ext,greek-ext,greek,vietnamese,latin-ext,cyrillic' rel='stylesheet' type='text/css'>
<link rel="stylesheet" href="//wordpress.org/style/wp4.css?35" />
<link media="only screen and (max-device-width: 480px)" href="//wordpress.org/style/iphone.css" type="text/css" rel="stylesheet" />
<link rel="shortcut icon" href="//wordpress.org/favicon.ico?3" type="image/x-icon" />


<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
var pageTracker = _gat._getTracker("UA-52447-1");
pageTracker._initData();
pageTracker._trackPageview();
function recordOutboundLink(link, category, action) {
  pageTracker._trackEvent(category, action);
  setTimeout('document.location = "' + link.href + '"', 100);
}
</script>
<!--[if lte IE 8]>
<style type="text/css">
@import url("//wordpress.org/style/ie.css?1");
</style>
<![endif]-->
	<script type="text/javascript" src="//wordpress.org/wp-includes/js/jquery/jquery.js"></script>
<script>document.cookie='devicePixelRatio='+((window.devicePixelRatio === undefined) ? 1 : window.devicePixelRatio)+'; path=/';</script>
<!--[if IE]>
    <script type="text/javascript" src="/skins/common/IEFixes.js"></script>
    <meta http-equiv="imagetoolbar" content="no" />
<![endif]-->

<script type="text/javascript" src="/index.php?title=-&amp;action=raw&amp;gen=js&amp;useskin=codex"></script>
<script type="text/javascript">wgBreakFrames=false;wgContentLanguage='en';</script>
<script type="text/javascript" src="/skins/common/wikibits.js"></script>

</head>

<body id="wordpress-org"  >
<div id="header">
	<div class="wrapper">
		<h1><a href="//wordpress.org">WordPress.org</a></h1>				<div id="head-search">
		<form action="http://wordpress.org/search/do-search.php" method="get">
			<input class="text" name="search" type="text" value="" maxlength="150" placeholder="Search WordPress.org" /> <input type="submit" class="button" value="" />
		</form>
		</div>
				<div style="clear:both"></div>
		
<ul>
<li><a href='http://wordpress.org/showcase/' title='See some of the sites built on WordPress.'>Showcase</a></li>
<li><a href='http://wordpress.org/extend/themes/' title='Find just the right look for your website.'>Themes</a></li>
<li><a href='http://wordpress.org/extend/plugins/' title='Plugins can extend WordPress to do almost anything you can imagine.'>Plugins</a></li>
<li><a href='http://wordpress.org/extend/mobile/' title='Take your website on the go!'>Mobile</a></li>
<li><a href='http://wordpress.org/support/' title='Forums, documentation, help.' class="current">Support</a><ul class="nav-submenu"><li><a href='http://wordpress.org/support/' title='Support and discussion forums.'>Forums</a></li><li><a href='http://codex.wordpress.org/Main_Page' title='Documentation, tutorials, best practices.'>Documentation</a></li></ul><div class="uparrow"></div></li>
<li><a href='http://make.wordpress.org/' title='Contribute your knowledge.'>Get Involved</a><ul class="nav-submenu"><li><a href='http://make.wordpress.org/core/' title='Write the code.'>Core</a></li><li><a href='http://make.wordpress.org/ui/' title='Improve the interface.'>UI</a></li><li><a href='http://make.wordpress.org/accessibility/' title='Create a better experience.'>Accessibility</a></li><li><a href='http://make.wordpress.org/plugins/' title='Extend the system.'>Plugins</a></li><li><a href='http://make.wordpress.org/themes/' title='Beautify the web.'>Themes</a></li><li><a href='http://make.wordpress.org/support/' title='Help the users.'>Support</a></li><li><a href='http://make.wordpress.org/polyglots/' title='Translate for the world.'>Polyglots</a></li><li><a href='http://make.wordpress.org/mobile/' title='On the go.'>Mobile</a></li></ul><div class="uparrow"></div></li>
<li><a href='http://wordpress.org/about/' title='About the WordPress Organization, and where we&#039;re going.'>About</a></li>
<li><a href='http://wordpress.org/news/' title='Come here for the latest scoop.'>Blog</a></li>
<li><a href='http://wordpress.org/hosting/' title='Find a home for your blog.'>Hosting</a></li>
<li id="download" class="button download-button"><a href='http://wordpress.org/download/' title='Get it. Got it? Good.'>Download WordPress</a></li>
</ul>
		<div style="clear:both"></div>
	</div>
</div>


<div id="headline">
	<div class="wrapper">
		<h2>Codex</h2>
		
		<div class="portlet" id="p-personal">
		  <p class="login">Codex tools:
		     <a href="/index.php?title=Special:UserLogin&amp;returnto=Function_Reference/add_meta_box">Log in</a> 		  </p>
		</div>
	</div>
</div>

<div id="pagebody">
	<div class="wrapper">	
		<div class="col-10" id="bodyContent">
						<h2 class="pagetitle">Function Reference/add meta box</h2>
									<!-- start content -->
				<p class="LanguageLinks" style="border:1px solid #CCCCCC; line-height:1.5; text-align:left; color:#333333; font-size:90%; padding:10px;"><span style="white-space:nowrap;"><a href="/Multilingual_Codex" title="Multilingual Codex" class="mw-redirect">Languages</a>:</span> 
<strong class="selflink">English</strong> • 
<a href="http://wpdocs.sourceforge.jp/%E9%96%A2%E6%95%B0%E3%83%AA%E3%83%95%E3%82%A1%E3%83%AC%E3%83%B3%E3%82%B9/add_meta_box" class="external text" title="http://wpdocs.sourceforge.jp/%E9%96%A2%E6%95%B0%E3%83%AA%E3%83%95%E3%82%A1%E3%83%AC%E3%83%B3%E3%82%B9/add_meta_box">日本語</a> • 
<a href="/pt-br:add_meta_box" title="pt-br:add meta box">Português do Brasil</a> • 

 <small>(<a href="/Multilingual_Codex#Language_Cross_Reference" title="Multilingual Codex" class="mw-redirect">Add your language</a>)</small>
</p>
<table id="toc" class="toc" summary="Contents"><tr><td><div id="toctitle"><h2>Contents</h2></div>
<ul>
<li class="toclevel-1"><a href="#Description"><span class="tocnumber">1</span> <span class="toctext">Description</span></a></li>
<li class="toclevel-1"><a href="#Usage"><span class="tocnumber">2</span> <span class="toctext">Usage</span></a></li>
<li class="toclevel-1"><a href="#Parameters"><span class="tocnumber">3</span> <span class="toctext">Parameters</span></a></li>
<li class="toclevel-1"><a href="#Return_Values"><span class="tocnumber">4</span> <span class="toctext">Return Values</span></a></li>
<li class="toclevel-1"><a href="#Example"><span class="tocnumber">5</span> <span class="toctext">Example</span></a>
<ul>
<li class="toclevel-2"><a href="#Callback_args"><span class="tocnumber">5.1</span> <span class="toctext">Callback args</span></a></li>
</ul>
</li>
<li class="toclevel-1"><a href="#Source_File"><span class="tocnumber">6</span> <span class="toctext">Source File</span></a></li>
<li class="toclevel-1"><a href="#Further_Reading"><span class="tocnumber">7</span> <span class="toctext">Further Reading</span></a></li>
<li class="toclevel-1"><a href="#External_Resources"><span class="tocnumber">8</span> <span class="toctext">External Resources</span></a></li>
</ul>
</td></tr></table><script type="text/javascript"> if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } </script>
<a name="Description" id="Description"></a><h2> <span class="mw-headline"> Description </span></h2>
<p>The <tt>add_meta_box()</tt> function was introduced in <a href="/Version_2.5" title="Version 2.5">Version 2.5</a>.  It allows plugin developers to add meta boxes to the administrative interface.
</p>
<a name="Usage" id="Usage"></a><h2> <span class="mw-headline"> Usage </span></h2>
<p><code><span style="color: #000000">
<span style="color: #0000BB">&lt;?php<br />&nbsp;&nbsp;&nbsp;add_meta_box</span><span style="color: #007700">(&nbsp;</span><span style="color: #0000BB">$id</span><span style="color: #007700">,&nbsp;</span><span style="color: #0000BB">$title</span><span style="color: #007700">,&nbsp;</span><span style="color: #0000BB">$callback</span><span style="color: #007700">,&nbsp;</span><span style="color: #0000BB">$post_type</span><span style="color: #007700">,&nbsp;</span><span style="color: #0000BB">$context</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$priority</span><span style="color: #007700">,&nbsp;</span><span style="color: #0000BB">$callback_args&nbsp;</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">?&gt;</span>
</span>
</code>
</p>
<a name="Parameters" id="Parameters"></a><h2> <span class="mw-headline"> Parameters </span></h2>
<dl><dt> <tt>$id</tt>
</dt><dd> (<a href="/How_to_Pass_Tag_Parameters#String" title="How to Pass Tag Parameters"><i>string</i></a>) (<i>required</i>) HTML 'id' attribute of the edit screen section
<dl><dd> Default: <i>None</i>
</dd></dl>
</dd></dl>
<dl><dt> <tt>$title</tt>
</dt><dd> (<a href="/How_to_Pass_Tag_Parameters#String" title="How to Pass Tag Parameters"><i>string</i></a>) (<i>required</i>) Title of the edit screen section, visible to user
<dl><dd> Default: <i>None</i>
</dd></dl>
</dd></dl>
<dl><dt> <tt>$callback</tt>
</dt><dd> (<a href="/How_to_Pass_Tag_Parameters#Callback" title="How to Pass Tag Parameters"><i>callback</i></a>) (<i>required</i>) Function that prints out the HTML for the edit screen section. The function name as a string, or, within a class, an array to call one of the class's methods. The callback can accept up to two arguments, see <a href="#Callback_args" title="">Callback args</a>. See the second example under <a href="/Function_Reference/add_meta_box#Example" title="Function Reference/add meta box">Example</a> below.
<dl><dd> Default: <i>None</i>
</dd></dl>
</dd></dl>
<dl><dt> <tt>$post_type</tt>
</dt><dd> (<a href="/How_to_Pass_Tag_Parameters#String" title="How to Pass Tag Parameters"><i>string</i></a>) (<i>required</i>) The type of Write screen on which to show the edit screen section (<tt>'post'</tt>, <tt>'page'</tt>, <tt>'link'</tt>, <tt>'attachment'</tt> or <tt>'custom_post_type'</tt> where custom_post_type is the custom post type slug)
<dl><dd> Default: <i>None</i>
</dd></dl>
</dd></dl>
<dl><dt> <tt>$context</tt>
</dt><dd> (<a href="/How_to_Pass_Tag_Parameters#String" title="How to Pass Tag Parameters"><i>string</i></a>) (<i>optional</i>) The part of the page where the edit screen section should be shown (<tt>'normal'</tt>, <tt>'advanced'</tt>, or <tt>'side'</tt>). (Note that 'side' doesn't exist before 2.7)
<dl><dd> Default: 'advanced'
</dd></dl>
</dd></dl>
<dl><dt> <tt>$priority</tt>
</dt><dd> (<a href="/How_to_Pass_Tag_Parameters#String" title="How to Pass Tag Parameters"><i>string</i></a>) (<i>optional</i>) The priority within the context where the boxes should show (<tt>'high'</tt>, <tt>'core'</tt>, <tt>'default'</tt> or <tt>'low'</tt>)
<dl><dd> Default: 'default'
</dd></dl>
</dd></dl>
<dl><dt> <tt>$callback_args</tt>
</dt><dd> (<a href="/How_to_Pass_Tag_Parameters#Array" title="How to Pass Tag Parameters"><i>array</i></a>) (<i>optional</i>) Arguments to pass into your callback function. The callback will receive the $post object and whatever parameters are passed through this variable.
<dl><dd> Default: null
</dd></dl>
</dd></dl>
<a name="Return_Values" id="Return_Values"></a><h2> <span class="mw-headline"> Return Values </span></h2>
<p>None.
</p>
<a name="Example" id="Example"></a><h2> <span class="mw-headline"> Example </span></h2>
<p>Here is an example that adds a custom section to the post and page editing screens: 
</p>
<pre>
&lt;?php
/* Define the custom box */

add_action( 'add_meta_boxes', 'myplugin_add_custom_box' );

// backwards compatible (before WP 3.0)
// add_action( 'admin_init', 'myplugin_add_custom_box', 1 );

/* Do something with the data entered */
add_action( 'save_post', 'myplugin_save_postdata' );

/* Adds a box to the main column on the Post and Page edit screens */
function myplugin_add_custom_box() {
    $screens = array( 'post', 'page' );
    foreach ($screens as $screen) {
        add_meta_box(
            'myplugin_sectionid',
            __( 'My Post Section Title', 'myplugin_textdomain' ),
            'myplugin_inner_custom_box',
            $screen
        );
    }
}

/* Prints the box content */
function myplugin_inner_custom_box( $post ) {

  // Use nonce for verification
  wp_nonce_field( plugin_basename( __FILE__ ), 'myplugin_noncename' );

  // The actual fields for data entry
  // Use get_post_meta to retrieve an existing value from the database and use the value for the form
  $value = get_post_meta( $post-&gt;ID, '_my_meta_value_key', true );
  echo '&lt;label for=&quot;myplugin_new_field&quot;&gt;';
       _e(&quot;Description for this field&quot;, 'myplugin_textdomain' );
  echo '&lt;/label&gt; ';
  echo '&lt;input type=&quot;text&quot; id=&quot;myplugin_new_field&quot; name=&quot;myplugin_new_field&quot; value=&quot;'.esc_attr($value).'&quot; size=&quot;25&quot; /&gt;';
}

/* When the post is saved, saves our custom data */
function myplugin_save_postdata( $post_id ) {

  // First we need to check if the current user is authorised to do this action. 
  if ( 'page' == $_POST['post_type'] ) {
    if (&nbsp;! current_user_can( 'edit_page', $post_id ) )
        return;
  } else {
    if (&nbsp;! current_user_can( 'edit_post', $post_id ) )
        return;
  }

  // Secondly we need to check if the user intended to change this value.
  if (&nbsp;! isset( $_POST['myplugin_noncename'] ) ||&nbsp;! wp_verify_nonce( $_POST['myplugin_noncename'], plugin_basename( __FILE__ ) ) )
      return;

  // Thirdly we can save the value to the database

  //if saving in a custom table, get post_ID
  $post_ID = $_POST['post_ID'];
  //sanitize user input
  $mydata = sanitize_text_field( $_POST['myplugin_new_field'] );

  // Do something with $mydata 
  // either using 
  add_post_meta($post_ID, '_my_meta_value_key', $mydata, true) or
    update_post_meta($post_ID, '_my_meta_value_key', $mydata);
  // or a custom table (see Further Reading section below)
}
?&gt;
</pre>
<p>This is an example of how to add a meta box from inside a class
</p>
<pre>
/**
 * Calls the class on the post edit screen
 */
function call_someClass() 
{
    return new someClass();
}
if ( is_admin() )
    add_action( 'load-post.php', 'call_someClass' );

/** 
 * The Class
 */
class someClass
{
    const LANG = 'some_textdomain';

    public function __construct()
    {
        add_action( 'add_meta_boxes', array( &amp;$this, 'add_some_meta_box' ) );
    }

    /**
     * Adds the meta box container
     */
    public function add_some_meta_box()
    {
        add_meta_box( 
             'some_meta_box_name'
            ,__( 'Some Meta Box Headline', self::LANG )
            ,array( &amp;$this, 'render_meta_box_content' )
            ,'post' 
            ,'advanced'
            ,'high'
        );
    }


    /**
     * Render Meta Box content
     */
    public function render_meta_box_content() 
    {
        echo '&lt;h1&gt;TEST OUTPUT - this gets rendered inside the meta box.&lt;/h1&gt;';
    }
}
</pre>
<a name="Callback_args" id="Callback_args"></a><h3> <span class="mw-headline"> Callback args </span></h3>
<p>The <code>$callback_args</code> array will be passed to the callback function as the second argument. The first argument is the post's $post object.
</p>
<pre>
// This function adds a meta box with a callback function of my_metabox_callback()
function add_my_meta_box() {
     $var1 = 'this';
     $var2 = 'that';
     add_meta_box( 
           'metabox_id',
           'Metabox Title',
           'my_metabox_callback',
           'page',
           'normal',
           'low', 
           array( 'foo' =&gt; $var1, 'bar' =&gt; $var2)
      );
}

// $post is an object containing the current post (as a $post object)
// $metabox is an array with metabox id, title, callback, and args elements. 
// The args element is an array containing your passed $callback_args variables.

function my_metabox_callback ( $post, $metabox ) {
     echo 'Last Modified: '.$post-&gt;post_modified;        // outputs last time the post was modified
     echo $metabox['args']['foo'];                         // outputs 'this'
     echo $metabox['args']['bar'];                         // outputs 'that'
     echo get_post_meta($post-&gt;ID,'my_custom_field',true); // outputs value of custom field
}
</pre>
<a name="Source_File" id="Source_File"></a><h2> <span class="mw-headline"> Source File </span></h2>
<p><code>add_meta_box()</code> is located in <code><a href="http://core.trac.wordpress.org/browser/tags/3.5.1/wp-admin/includes/template.php#L0" class="external text" title="http://core.trac.wordpress.org/browser/tags/3.5.1/wp-admin/includes/template.php#L0">wp-admin/includes/template.php</a></code>.
</p>
<a name="Further_Reading" id="Further_Reading"></a><h2> <span class="mw-headline"> Further Reading </span></h2>
<ul><li> <a href="/Migrating_Plugins_and_Themes" title="Migrating Plugins and Themes">Migrating Plugins and Themes</a>
</li><li> <a href="/Function_Reference" title="Function Reference">Function Reference</a>
</li><li> <a href="/Creating_Tables_with_Plugins" title="Creating Tables with Plugins">Creating Tables with Plugins</a>
</li><li> <a href="/Function_Reference/remove_meta_box" title="Function Reference/remove meta box"> remove_meta_box()</a>
</li><li> <a href="/Function_Reference/update_post_meta" title="Function Reference/update post meta"> update_post_meta()</a>
</li><li> <a href="/Function_Reference/add_post_meta" title="Function Reference/add post meta"> add_post_meta()</a>
</li></ul>
<a name="External_Resources" id="External_Resources"></a><h2> <span class="mw-headline"> External Resources </span></h2>
<ul><li> <a href="https://gist.github.com/1880770" class="external text" title="https://gist.github.com/1880770">Class for quickly creating metaboxes</a> - Allows you to easily declare a new metabox and set the input fields to display in a few short lines.
</li></ul>
<ul><li> <a href="http://andrewferguson.net/2008/09/26/using-add_meta_box/" class="external text" title="http://andrewferguson.net/2008/09/26/using-add_meta_box/">Using add_meta_box() for your plugin</a> - How to use boxes for your plugin's administration page
</li><li> <a href="http://wefunction.com/2008/10/tutorial-creating-custom-write-panels-in-wordpress/" class="external text" title="http://wefunction.com/2008/10/tutorial-creating-custom-write-panels-in-wordpress/">Tutorial: Creating Custom Write Panels in WordPress</a> - Use Custom Write options to easily add any unique data to your post
</li><li> <a href="http://farinspace.com/2010/03/page-specific-wordpress-meta-box/" class="external text" title="http://farinspace.com/2010/03/page-specific-wordpress-meta-box/">Limit a WordPress Meta Box to a Specific Page</a>
</li><li> <a href="http://wpengineer.com/1991/example-how-to-add-meta-boxes-to-edit-area/" class="external text" title="http://wpengineer.com/1991/example-how-to-add-meta-boxes-to-edit-area/">Example How To Add Meta Boxes To Edit Area</a> - Fully functional example plugin from April, 2010 (GPL Licensed)
</li><li> <a href="http://wordpress.org/support/topic/add_meta_box-callback-with-arguments" class="external text" title="http://wordpress.org/support/topic/add_meta_box-callback-with-arguments">add_meta_box() $callback_args parameter </a> - How to use the $callback_args parameter pre/post WP 2.8
</li><li> <a href="http://www.wproots.com/complex-meta-boxes-in-wordpress/" class="external text" title="http://www.wproots.com/complex-meta-boxes-in-wordpress/">Meta boxes and hooks</a> - An in-depth look at how to build and use meta boxes in admin screens
</li></ul>
<div style="clear:both; background-color:#F7F7F7; border:1px solid #CCCCCC; color:#000000; padding:7px; margin:0.5em auto 0.5em auto; vertical-align:middle;">See also index of <a href="/Function_Reference" title="Function Reference">Function Reference</a> and index of <a href="/Template_Tags" title="Template Tags">Template Tags</a>.</div>

<!-- 
NewPP limit report
Preprocessor node count: 181/1000000
Post-expand include size: 3426/2097152 bytes
Template argument size: 1788/2097152 bytes
Expensive parser function count: 0/100
-->
<div class="printfooter">
Retrieved from "<a href="http://codex.wordpress.org/Function_Reference/add_meta_box">http://codex.wordpress.org/Function_Reference/add_meta_box</a>"</div>
				<div id="catlinks"><div id='catlinks' class='catlinks'><div id="mw-normal-catlinks"><a href="/Special:Categories" title="Special:Categories">Category</a>:&#32;<span dir='ltr'><a href="/Category:Functions" title="Category:Functions">Functions</a></span></div></div></div>			<!-- end content -->
		</div>
		<div class="col-2">
			
						
			<ul class="submenu">
				<li id="n-mainpage"><a href="/Main_Page">Home Page</a></li>	
				<li><a href="/WordPress_Lessons">WordPress Lessons</a></li>
				<li><a href="/Getting_Started_with_WordPress">Getting Started</a></li>
				<li><a href="/Working_with_WordPress">Working with WordPress</a></li>
				<li><a href="/Blog_Design_and_Layout">Design and Layout</a></li>
				<li><a href="/Advanced_Topics">Advanced Topics</a></li>
				<li><a href="/Troubleshooting">Troubleshooting</a></li>
				<li><a href="/Developer_Documentation">Developer Docs</a></li>
				<li><a href="/About_WordPress">About WordPress</a></li>
			</ul>

			<h3>Codex Resources</h3>
			<ul class="submenu">
				<li id="n-portal"><a href="/Codex:Community_Portal">Community portal</a></li>	      
				<li id="n-currentevents"><a href="/Current_events">Current events</a></li>	      
				<li id="n-recentchanges"><a href="/Special:RecentChanges">Recent changes</a></li>	      
				<li id="n-randompage"><a href="/Special:Random">Random page</a></li>	      
				<li id="n-help"><a href="/Help:Contents">Help</a></li>	
			</ul>
			
		</div>
	</div>
</div>


<div id="footer">
	<div class="wrapper">
		<p> 
			<a href="http://wordpress.org/about/privacy/">Privacy</a> | 
			<a href="http://wordpress.org/about/license/">License / GPLv2</a>
            &nbsp; &nbsp; See also: 
            <a href="http://wordpress.com/?ref=wporg-footer" title="Hassle-free WP hosting">Hosted WordPress.com</a> |
			<a href="http://wordpress.tv/" title="Videos, tutorials, WordCamps">WordPress.TV Videos</a> |
			<a href="http://central.wordcamp.org/" title="Find a WordPress event near your home">WordCamp Events</a> |
			<a href="http://buddypress.org/" title="A set of plugins to transform your WordPress into a social network">BuddyPress Social Layer</a> |
			<a href="http://bbpress.org/" title="Fast, slick forums built on WordPress">bbPress Forums</a> |
			<a href="http://jobs.wordpress.net/" title="Find or post WordPress jobs">WP Jobs</a> | 
            <a href="http://ma.tt/" title="Co-founder of WordPress, an example of what WordPress can do">Matt</a>
		</p>
<br />
<iframe src="http://www.facebook.com/plugins/like.php?app_id=121415197926116&amp;href=http%3A%2F%2Fwww.facebook.com%2Fwordpress&amp;send=false&amp;layout=button_count&amp;width=150&amp;show_faces=false&amp;action=like&amp;colorscheme=light&amp;font=lucida+grande&amp;height=21" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:150px; height:21px;" allowTransparency="true"></iframe>
<!-- <div class="g-plusone" data-size="medium" data-href="https://plus.google.com/107188080561309681193"></div> -->
<iframe allowtransparency="true" frameborder="0" scrolling="no" src="http://platform.twitter.com/widgets/follow_button.html?screen_name=WordPress&show_count=false" style="width:150px; height:20px;"></iframe>

		<h6>Code is Poetry</h6>
	</div>
</div>


<script type="text/javascript">_qoptions={qacct:"p-18-mFEk4J448M"};</script>
<script type="text/javascript" src="http://edge.quantserve.com/quant.js"></script>
<noscript><img src="http://pixel.quantserve.com/pixel/p-18-mFEk4J448M.gif" style="display: none;" border="0" height="1" width="1" alt=""/></noscript>
<!--  -->
<script type="text/javascript" src="http://s.gravatar.com/js/gprofiles.js"></script>
<script type="text/javascript">
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script>
<script type="text/javascript">
(function($){
$(document).ready(function() {
	$('#footer a').click(function() {
		if (this.href.indexOf('wordpress.org') == -1 && this.href.indexOf('http') == 0) {
			recordOutboundLink(this, 'Outbound Links', this.href);
			return false;
		}
	});
});
})(jQuery);
</script>
</body>
<!-- Cached 20130417183711 -->
</html>

</body>
<!-- Cached 20130417183711 -->
</html>

