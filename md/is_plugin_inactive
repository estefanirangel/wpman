is plugin inactive "MAY 2013" WordPress Codex "Function Reference"
==================================================================

NAME
----

is plugin inactive - Checks if a plugin is not activated.

SYNOPSIS
--------

Checks if a plugin is not activated.

This function is the logical negation of `is_plugin_active()`. Used as a
callback.

USAGE
-----

In the Admin Area: ` <?php is_plugin_inactive($plugin) ?> ` In the front
end, in a theme, etc...
` <?php include_once( ABSPATH . 'wp-admin/includes/plugin.php' ); ?><?php is_plugin_inactive($plugin) ?> `

PARAMETERS
----------

 `$plugin` 
:   ([*string*](/How_to_Pass_Tag_Parameters#String "How to Pass Tag Parameters"))
    (*required*) The name of the plugin sub-directory/file.
    Default: *None*

RETURN VALUES
-------------

True
:   if plugin is not activated, else `false`.

EXAMPLES
--------

` <?php// Makes sure the plugin is defined before trying to use itif ( ! function_exists('is_plugin_inactive')) {    require_once( ABSPATH . '/wp-admin/includes/plugin.php' );}if (is_plugin_inactive('plugin-directory/plugin-file.php')) {    //plugin is not activated}?> `

NOTES
-----

The file that defines this function (wp-admin/includes/plugin.php) is
only loaded in the admin sections. In order to use is\_plugin\_active
outside the admin pages, it's necessary to include or require plugin.php
before trying to use it (as shown in the example).

CHANGE LOG
----------

Since [Version 3.1](/Version_3.1 "Version 3.1")

SOURCE FILE
-----------

`is_plugin_inactive()` is defined in `wp-admin/includes/plugin.php`.

