Function Reference/get page template slug « WordPress Codex
-----------

Get the specific template name for a page.

Usage
-----

`  <?php get_page_template_slug( $post_id ); ?> `

Parameters
----------

 `$post_id` 
:   ([*integer*](/How_to_Pass_Tag_Parameters#Integer "How to Pass Tag Parameters"))
    (*optional*) The page ID to check.
    Default: The current post, when used in the [The
    Loop](/The_Loop "The Loop").

Return Values
-------------

 `` `(string/bool)`{style="color:gray"} 
:   Returns [page template](/Page_Templates "Page Templates") filename.
    Returns an empty string when the default page template is in use.
    Returns false if the post is not a page.

Examples
--------

Display the page template filename of the current Page:

    <?php echo get_page_template_slug( $post->ID ); ?>

Notes
-----

-   Uses:
    [`get_post()`](/Function_Reference/get_post "Function Reference/get post")
-   Uses:
    [`get_post_meta()`](/Function_Reference/get_post_meta "Function Reference/get post meta")

The filename of a Page's assigned custom template is stored as the value
of a [Custom Field](/Custom_Fields "Custom Fields") with a key named
`'_wp_page_template'` (in the
[`wp_postmeta`](/Database_Description#Table:_wp_postmeta "Database Description")
database table). If the template is stored in a Theme's subdirectory (or
a Parent Theme's subdirectory of a Child Theme), the value of the
`wp_postmeta` is both the folder and file names, e.g.:

    my-templates/my-custom-template.php

The function `get_page_template_slug()` returns an empty string when the
value of `'_wp_page_template'` is either empty or `'default'`.

Custom fields starting with an underscore do *not* display in the Edit
screen's Custom Fields module. To retrieve a Page's custom template
metadata, you can also use:

    get_post_meta( $post->ID, '_wp_page_template', true )

Change Log
----------

Since: 3.4.0

Source File
-----------

`get_page_template_slug()` is located in `wp-includes/post-template.php`

